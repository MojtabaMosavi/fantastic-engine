@use "../abstracts/functions" as *;
@use "../abstracts" as utility;
@import "animate.css";
/*-------------------------------------------*\
    #body-styles
\*--------------------------------------------*/

.game {
  &__body {
    animation: rotateIn;
    animation-duration: 2s;

    // state modifier
    &--hidden {
      animation: rotateOut;
      animation-duration: 2s;
    }

    &-wrapper {
      max-width: 25rem;
      margin: 0 auto;
      margin-bottom: 9rem;
      display: grid;
      grid-template:
        [row1-start] ". scissors ." 1fr [end-row1]
        [row2-start] "spock . paper" 1fr [end-row2]
        [row3-start] "lizard . rock" 1fr [end-row3] / 1fr 1.5fr 1fr;
    }
  }

  &__button {
    width: clamp(6rem, 10vw + 1rem, 9rem);
    height: clamp(6rem, 10vw + 1rem, 9rem);
    border-radius: 50%;
    background-size: 50%;
    border: none;
    position: relative;
    z-index: 2;

    // button animations -------------------------------------------------------
    &:hover {
      animation: tada 1.5s infinite;
    }

    /* Outer circle
    * Each button is composed of two circles.
    * Since it's not possible to set a linear-gradient as the value of border property 
    * the outer circle simulate this behavior.
    * The inner circle implemented with a pseudo element contains the sprite.
    */

    // common style for all inner circles-------------------------------------
    &::before {
      content: "";
      position: absolute;
      width: calc(100% - var(--border-width));
      height: calc(100% - var(--border-width));
      left: 50%;
      top: 50%;
      border-radius: 50%;
      box-shadow: inset 0 rem(4px) 0 var(--box-shadow-inset);
      transform: translate(-50%, -50%);
    }

    // common styels for game__button-wrapper-----------------------------------------------
    &-wrapper {
      border-radius: 50%;
      width: clamp(6rem, 10vw + 1rem, 9rem);
      height: clamp(6rem, 10vw + 1rem, 9rem);
      position: relative;

      // Pulses on button when hovered -------------------------------------------
      &:hover {
        animation: pulse-xs 1.5s linear infinite;
      }

      /* Lines that conncet all the button are created using a pseudo element on game__button-wrapper
      *  all the common styles are captured here and specific styels in game__button-wrapper--x.
      */
      &::after {
        content: "";
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: var(--connection-line-w);
        height: var(--connection-line-h);
        background-color: var(--bg-radial-gradient-to);
        z-index: -10;
      }
    }

    //scissors -------------------------------------------------------------------------------

    &-wrapper--scissors {
      grid-area: scissors;
      justify-self: center;

      // connection line-----------------------------------------------------
      &::after {
        transform: translate(-50%, -50%) rotate(45deg) translateY(50%);
      }
    }

    &--scissors {
      background: linear-gradient(
        var(--scissors-gradient-from),
        var(--scissors-gradient-to)
      );
      box-shadow: 0 rem(4px) 0 0 var(--scissors-shadow-outset);
      position: relative;

      // inner circle-------------------------------------------------------
      &::before {
        background: url("../assets/images/icon-scissors.svg") 44% 59%/45%
          no-repeat;
        background-color: var(--white);
      }
    }

    //paper -------------------------------------------------------------------------------

    &-wrapper--paper {
      grid-area: paper;
      top: -10%;
      left: -19%;

      &::after {
        transform: translate(-50%, -50%) rotate(122deg) translateY(50%);
      }
    }

    &--paper {
      background: linear-gradient(
        var(--paper-gradient-from),
        var(--paper-gradient-to)
      );
      box-shadow: 0 rem(4px) 0 0 var(--paper-shadow-outset);

      &::before {
        background: url("../assets/images/icon-paper.svg") 44% 59%/45% no-repeat;
        background-color: var(--white);
      }
    }
    //rock -------------------------------------------------------------------------------

    &-wrapper--rock {
      grid-area: rock;
      left: -58%;
      top: 17%;

      &::after {
        transform: translate(-50%, -58%) rotate(196deg) translateY(28%);
      }
    }

    &--rock {
      background: linear-gradient(
        var(--rock-gradient-from),
        var(--rock-gradient-to)
      );
      box-shadow: 0 rem(4px) 0 0 var(--rock-shadow-outset);

      &::before {
        background: url("../assets/images/icon-rock.svg") 44% 59%/45% no-repeat;
        background-color: var(--white);
      }
    }
    // spock -----------------------------------------------------------------------

    &-wrapper--spock {
      grid-area: spock;
      left: 28%;
      top: -10%;

      &::after {
        transform: translate(-50%, -50%) rotate(-23deg) translateY(50%);
      }
    }

    &--spock {
      background: linear-gradient(
        var(--spock-gradient-from),
        var(--spock-gradient-to)
      );
      box-shadow: 0 rem(4px) 0 0 var(--spock-shadow-outset);

      &::before {
        background: url("../assets/images/icon-spock.svg") 56% 49%/39% no-repeat;
        background-color: var(--white);
      }
    }

    // lizard-----------------------------------------------------------------------------
    &-wrapper--lizard {
      grid-area: lizard;
      left: 69%;
      top: 18%;

      &::after {
        transform: translate(-50%, -55%) rotate(-90deg) translateY(50%);
      }
    }

    &--lizard {
      background: linear-gradient(
        var(--lizard-gradient-from),
        var(--lizard-gradient-to)
      );
      box-shadow: 0 rem(4px) 0 0 var(--lizard-shadow-outset);

      &::before {
        background: url("../assets/images/icon-lizard.svg") 48% 54%/58%
          no-repeat;
        background-color: var(--white);
      }
    }
  }

  // tablet view -----------------------------------------------------------------------
  @include utility.respond-to("tablet") {
    &__body {
      &-wrapper {
        margin-bottom: 1rem;
        /* using the interpolate function, define a width that minimum-width is mobile-width and
        * maximun-width desktop-width but between these threshold grows and shrinks dynamically. 
        */
        @include utility.interpolate(
          max-width,
          utility.$mobile-width,
          utility.$desktop-width,
          rem(375px),
          rem(700px)
        );
      }
    }

    &__button {
      &-wrapper {
        // Pulses on button when hovered -------------------------------------------
        &:hover {
          animation: pulse-s 1.5s linear infinite;
        }
      }
      // common style for all inner circles
      &::before {
        box-shadow: inset 0 rem(6px) 0 var(--box-shadow-inset);
      }

      // scissors-----------------------------------------------------------------

      &--scissors {
        box-shadow: 0 rem(6px) 0 0 var(--scissors-shadow-outset);
      }

      // paper-----------------------------------------------------------------
      &-wrapper--papper {
        top: -10%;
        left: -29%;
      }

      &--paper {
        box-shadow: 0 rem(6px) 0 0 var(--paper-shadow-outset);
      }

      // rock-----------------------------------------------------------------
      &-wrapper--rock {
        left: -62%;
        top: 19%;
      }

      &--rock {
        box-shadow: 0 rem(6px) 0 0 var(--rock-shadow-outset);
      }

      // lizard-----------------------------------------------------------------
      &-wrapper--lizard {
        left: 89%;
        top: 19%;
      }

      &--lizard {
        box-shadow: 0 rem(6px) 0 0 var(--lizard-shadow-outset);
      }

      // spock-----------------------------------------------------------------

      &-wrapper--spock {
        left: 56%;
        top: -11%;
      }
      &--spock {
        box-shadow: 0 rem(6px) 0 0 var(--spock-shadow-outset);
      }
    }
  }

  // tablet view -----------------------------------------------------------------------
  @include utility.respond-to("laptop") {
    &__button {
      &-wrapper {
        &:hover {
          animation: pulse-m 1.5s linear infinite;
        }
      }
    }
  }
}
